# --- COM REF ---

new Multiply<vector,matrixHomo> pg_comref
plug pg.comref pg_comref.in1
plug lfo_H_pg.out pg_comref.in2

# --- Selector of Com Ref and Foot Ref --- 
new Selector PGselec
PGselec.reset 2 3
PGselec.create vector scomref 0

# Dyn by default
plug dyn.com PGselec.scomref0
# Reference generated by the PG 
plug pg_comref.out PGselec.scomref1

# Plug the left leg.

new Multiply<matrixhomo> pg_leftfootref
plug pg.leftfootref pg_leftfootref.in1
plug lfo_H_pg.out pg_leftfootref.in2

PGselec.create matrixHomo leftfootref 1
plug dyn.lleg PGselec.leftfootref0
plug pg_leftfootref.out PGselec.leftfootref1

# Plug the right leg.
new Multiply<matrixhomo> pg_rightfootref
plug pg.rightfootref pg_rightfootref.in1
plug lfo_H_pg.out pg_rightfootref.in2

PGselec.create matrixHomo rightfootref 2
plug dyn.rleg PGselec.rightfootref0
plug pg_rightfootref.out PGselec.rightfootref1

# when the PG is processing.
plug pg.inprocess PGselec.selec

# Send the reference command to the task.
plug PGselec.scomref featureComDes.errorIN

set featureCom.selec 011
set taskCom.controlGain 1

# --- Handling the two feet ---
new FeaturePoint6d LeftFoot
plug dyn.Jlleg LeftFoot.Jq
plug dyn.lleg LeftFoot.position
new FeaturePoint6d LeftFootDes
set LeftFoot.sdes LeftFootDes

new FeaturePoint6d RightFoot
plug dyn.Jrleg RightFoot.Jq
plug dyn.rleg RightFoot.position
new FeaturePoint6d RightFootDes
set RightFoot.sdes RightFootDes

new Task taskLeftFoot
taskLeftFoot.add LeftFoot
set taskLeftFoot.controlGain 10

new Task taskRightFoot
taskRightFoot.add RightFoot
set taskRightFoot.controlGain 10

new Task taskLeftRightFeet
taskLeftRightFeet.add RightFoot
taskLeftRightFeet.add LeftFoot

plug PGselec.rightfootref RightFootDes.position
plug PGselec.leftfootref LeftFootDes.position

# --- SOT ---

set sot.damping 1e-15
# sot.push taskCom

# -> Balancing only
sot.clear
sot.rmConstraint legs
# sot.push taskLeftRightFeet
sot.push taskLeftFoot
sot.push taskRightFoot
# sot.push taskCom


# --- TRACE ---

OpenHRP.periodicCall addSignal pg_comref.out
OpenHRP.periodicCall addSignal dyn.com
OpenHRP.periodicCall addSignal taskCom.error

tr.add taskCom.error errorcom
tr.add taskCom.task taskcom
tr.add dyn.com
tr.add pg_comref.out comref
tr.add taskCom.controlGain gaincom
tr.add pg.comref comref0
tr.add pg.zmpref zpmref

tr.add PGselec.leftfootref pgsleftfootref
tr.add PGselec.rightfootref pgsrightfootref
tr.add pg.leftfootref pgleftfootref
tr.add pg.rightfootref pgrightfootref
tr.add dyn.lleg dynleftfootref
tr.add dyn.rleg dynrightfootref

tr.start
# stepper.state start

# --- DEBUG ---
# plug controlsmall.out OpenHRP.control
# set taskCom.controlGain 1

# plug flex.waistWorldPoseRPY dyn.ffposition

# set taskCom.controlGain 15
# set taskCom.controlGain 100

# new GainHyperbolic gainComH
# gainComH.set 15 1 8e3 .02
# plug taskCom.error gainComH.error
# plug gainComH.gain taskCom.controlGain

# set taskCom.controlGain 15

# --- 
# tr.add dyn.ffposition 
stepper.state start
